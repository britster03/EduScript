Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> function_def_list
Rule 2     function_def_list -> function_def_list function_def
Rule 3     function_def_list -> function_def
Rule 4     function_def -> FUNCTION IDENTIFIER LPAREN RPAREN LBRACE statement_list RBRACE
Rule 5     statement_list -> statement_list statement
Rule 6     statement_list -> <empty>
Rule 7     statement -> command_statement
Rule 8     statement -> if_statement
Rule 9     statement -> loop_statement
Rule 10    statement -> function_call
Rule 11    statement -> return_statement
Rule 12    command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON
Rule 13    if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause
Rule 14    else_clause -> ELSE LBRACE statement_list RBRACE
Rule 15    else_clause -> <empty>
Rule 16    loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE
Rule 17    function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON
Rule 18    return_statement -> RETURN expression SEMICOLON
Rule 19    expression -> expression PLUS expression
Rule 20    expression -> expression MINUS expression
Rule 21    expression -> expression MULTIPLY expression
Rule 22    expression -> expression DIVIDE expression
Rule 23    expression -> expression EQ expression
Rule 24    expression -> expression NEQ expression
Rule 25    expression -> expression LT expression
Rule 26    expression -> expression LE expression
Rule 27    expression -> expression GT expression
Rule 28    expression -> expression GE expression
Rule 29    expression -> expression AND expression
Rule 30    expression -> expression OR expression
Rule 31    expression -> NOT expression
Rule 32    expression -> LPAREN expression RPAREN
Rule 33    expression -> NUMBER
Rule 34    expression -> IDENTIFIER
Rule 35    expression -> function_call_expr
Rule 36    function_call_expr -> IDENTIFIER LPAREN arguments RPAREN
Rule 37    arguments -> arguments COMMA expression
Rule 38    arguments -> expression
Rule 39    arguments -> <empty>
Rule 40    ROBOT_COMMAND -> MOVEFORWARD
Rule 41    ROBOT_COMMAND -> MOVEBACKWARD
Rule 42    ROBOT_COMMAND -> TURNRIGHT
Rule 43    ROBOT_COMMAND -> TURNLEFT

Terminals, with rules where they appear

AND                  : 29
COMMA                : 37
DIVIDE               : 22
ELSE                 : 14
EQ                   : 23
FUNCTION             : 4
GE                   : 28
GT                   : 27
IDENTIFIER           : 4 17 34 36
IF                   : 13
LBRACE               : 4 13 14 16
LE                   : 26
LPAREN               : 4 12 13 16 17 32 36
LT                   : 25
MINUS                : 20
MOVEBACKWARD         : 41
MOVEFORWARD          : 40
MULTIPLY             : 21
NEQ                  : 24
NOT                  : 31
NUMBER               : 33
OR                   : 30
PLUS                 : 19
RBRACE               : 4 13 14 16
REPEAT               : 16
RETURN               : 18
RPAREN               : 4 12 13 16 17 32 36
SEMICOLON            : 12 17 18
TURNLEFT             : 43
TURNRIGHT            : 42
error                : 

Nonterminals, with rules where they appear

ROBOT_COMMAND        : 12
arguments            : 12 17 36 37
command_statement    : 7
else_clause          : 13
expression           : 13 16 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 32 37 38
function_call        : 10
function_call_expr   : 35
function_def         : 2 3
function_def_list    : 1 2
if_statement         : 8
loop_statement       : 9
program              : 0
return_statement     : 11
statement            : 5
statement_list       : 4 5 13 14 16

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . function_def_list
    (2) function_def_list -> . function_def_list function_def
    (3) function_def_list -> . function_def
    (4) function_def -> . FUNCTION IDENTIFIER LPAREN RPAREN LBRACE statement_list RBRACE

    FUNCTION        shift and go to state 4

    program                        shift and go to state 1
    function_def_list              shift and go to state 2
    function_def                   shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> function_def_list .
    (2) function_def_list -> function_def_list . function_def
    (4) function_def -> . FUNCTION IDENTIFIER LPAREN RPAREN LBRACE statement_list RBRACE

    $end            reduce using rule 1 (program -> function_def_list .)
    FUNCTION        shift and go to state 4

    function_def                   shift and go to state 5

state 3

    (3) function_def_list -> function_def .

    FUNCTION        reduce using rule 3 (function_def_list -> function_def .)
    $end            reduce using rule 3 (function_def_list -> function_def .)


state 4

    (4) function_def -> FUNCTION . IDENTIFIER LPAREN RPAREN LBRACE statement_list RBRACE

    IDENTIFIER      shift and go to state 6


state 5

    (2) function_def_list -> function_def_list function_def .

    FUNCTION        reduce using rule 2 (function_def_list -> function_def_list function_def .)
    $end            reduce using rule 2 (function_def_list -> function_def_list function_def .)


state 6

    (4) function_def -> FUNCTION IDENTIFIER . LPAREN RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 7


state 7

    (4) function_def -> FUNCTION IDENTIFIER LPAREN . RPAREN LBRACE statement_list RBRACE

    RPAREN          shift and go to state 8


state 8

    (4) function_def -> FUNCTION IDENTIFIER LPAREN RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 9


state 9

    (4) function_def -> FUNCTION IDENTIFIER LPAREN RPAREN LBRACE . statement_list RBRACE
    (5) statement_list -> . statement_list statement
    (6) statement_list -> .

    RBRACE          reduce using rule 6 (statement_list -> .)
    IF              reduce using rule 6 (statement_list -> .)
    REPEAT          reduce using rule 6 (statement_list -> .)
    IDENTIFIER      reduce using rule 6 (statement_list -> .)
    RETURN          reduce using rule 6 (statement_list -> .)
    MOVEFORWARD     reduce using rule 6 (statement_list -> .)
    MOVEBACKWARD    reduce using rule 6 (statement_list -> .)
    TURNRIGHT       reduce using rule 6 (statement_list -> .)
    TURNLEFT        reduce using rule 6 (statement_list -> .)

    statement_list                 shift and go to state 10

state 10

    (4) function_def -> FUNCTION IDENTIFIER LPAREN RPAREN LBRACE statement_list . RBRACE
    (5) statement_list -> statement_list . statement
    (7) statement -> . command_statement
    (8) statement -> . if_statement
    (9) statement -> . loop_statement
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) command_statement -> . ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON
    (13) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause
    (16) loop_statement -> . REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) function_call -> . IDENTIFIER LPAREN arguments RPAREN SEMICOLON
    (18) return_statement -> . RETURN expression SEMICOLON
    (40) ROBOT_COMMAND -> . MOVEFORWARD
    (41) ROBOT_COMMAND -> . MOVEBACKWARD
    (42) ROBOT_COMMAND -> . TURNRIGHT
    (43) ROBOT_COMMAND -> . TURNLEFT

    RBRACE          shift and go to state 12
    IF              shift and go to state 20
    REPEAT          shift and go to state 21
    IDENTIFIER      shift and go to state 11
    RETURN          shift and go to state 22
    MOVEFORWARD     shift and go to state 23
    MOVEBACKWARD    shift and go to state 24
    TURNRIGHT       shift and go to state 25
    TURNLEFT        shift and go to state 26

    statement                      shift and go to state 13
    command_statement              shift and go to state 14
    if_statement                   shift and go to state 15
    loop_statement                 shift and go to state 16
    function_call                  shift and go to state 17
    return_statement               shift and go to state 18
    ROBOT_COMMAND                  shift and go to state 19

state 11

    (17) function_call -> IDENTIFIER . LPAREN arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 27


state 12

    (4) function_def -> FUNCTION IDENTIFIER LPAREN RPAREN LBRACE statement_list RBRACE .

    FUNCTION        reduce using rule 4 (function_def -> FUNCTION IDENTIFIER LPAREN RPAREN LBRACE statement_list RBRACE .)
    $end            reduce using rule 4 (function_def -> FUNCTION IDENTIFIER LPAREN RPAREN LBRACE statement_list RBRACE .)


state 13

    (5) statement_list -> statement_list statement .

    RBRACE          reduce using rule 5 (statement_list -> statement_list statement .)
    IF              reduce using rule 5 (statement_list -> statement_list statement .)
    REPEAT          reduce using rule 5 (statement_list -> statement_list statement .)
    IDENTIFIER      reduce using rule 5 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 5 (statement_list -> statement_list statement .)
    MOVEFORWARD     reduce using rule 5 (statement_list -> statement_list statement .)
    MOVEBACKWARD    reduce using rule 5 (statement_list -> statement_list statement .)
    TURNRIGHT       reduce using rule 5 (statement_list -> statement_list statement .)
    TURNLEFT        reduce using rule 5 (statement_list -> statement_list statement .)


state 14

    (7) statement -> command_statement .

    RBRACE          reduce using rule 7 (statement -> command_statement .)
    IF              reduce using rule 7 (statement -> command_statement .)
    REPEAT          reduce using rule 7 (statement -> command_statement .)
    IDENTIFIER      reduce using rule 7 (statement -> command_statement .)
    RETURN          reduce using rule 7 (statement -> command_statement .)
    MOVEFORWARD     reduce using rule 7 (statement -> command_statement .)
    MOVEBACKWARD    reduce using rule 7 (statement -> command_statement .)
    TURNRIGHT       reduce using rule 7 (statement -> command_statement .)
    TURNLEFT        reduce using rule 7 (statement -> command_statement .)


state 15

    (8) statement -> if_statement .

    RBRACE          reduce using rule 8 (statement -> if_statement .)
    IF              reduce using rule 8 (statement -> if_statement .)
    REPEAT          reduce using rule 8 (statement -> if_statement .)
    IDENTIFIER      reduce using rule 8 (statement -> if_statement .)
    RETURN          reduce using rule 8 (statement -> if_statement .)
    MOVEFORWARD     reduce using rule 8 (statement -> if_statement .)
    MOVEBACKWARD    reduce using rule 8 (statement -> if_statement .)
    TURNRIGHT       reduce using rule 8 (statement -> if_statement .)
    TURNLEFT        reduce using rule 8 (statement -> if_statement .)


state 16

    (9) statement -> loop_statement .

    RBRACE          reduce using rule 9 (statement -> loop_statement .)
    IF              reduce using rule 9 (statement -> loop_statement .)
    REPEAT          reduce using rule 9 (statement -> loop_statement .)
    IDENTIFIER      reduce using rule 9 (statement -> loop_statement .)
    RETURN          reduce using rule 9 (statement -> loop_statement .)
    MOVEFORWARD     reduce using rule 9 (statement -> loop_statement .)
    MOVEBACKWARD    reduce using rule 9 (statement -> loop_statement .)
    TURNRIGHT       reduce using rule 9 (statement -> loop_statement .)
    TURNLEFT        reduce using rule 9 (statement -> loop_statement .)


state 17

    (10) statement -> function_call .

    RBRACE          reduce using rule 10 (statement -> function_call .)
    IF              reduce using rule 10 (statement -> function_call .)
    REPEAT          reduce using rule 10 (statement -> function_call .)
    IDENTIFIER      reduce using rule 10 (statement -> function_call .)
    RETURN          reduce using rule 10 (statement -> function_call .)
    MOVEFORWARD     reduce using rule 10 (statement -> function_call .)
    MOVEBACKWARD    reduce using rule 10 (statement -> function_call .)
    TURNRIGHT       reduce using rule 10 (statement -> function_call .)
    TURNLEFT        reduce using rule 10 (statement -> function_call .)


state 18

    (11) statement -> return_statement .

    RBRACE          reduce using rule 11 (statement -> return_statement .)
    IF              reduce using rule 11 (statement -> return_statement .)
    REPEAT          reduce using rule 11 (statement -> return_statement .)
    IDENTIFIER      reduce using rule 11 (statement -> return_statement .)
    RETURN          reduce using rule 11 (statement -> return_statement .)
    MOVEFORWARD     reduce using rule 11 (statement -> return_statement .)
    MOVEBACKWARD    reduce using rule 11 (statement -> return_statement .)
    TURNRIGHT       reduce using rule 11 (statement -> return_statement .)
    TURNLEFT        reduce using rule 11 (statement -> return_statement .)


state 19

    (12) command_statement -> ROBOT_COMMAND . LPAREN arguments RPAREN SEMICOLON

    LPAREN          shift and go to state 28


state 20

    (13) if_statement -> IF . LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause

    LPAREN          shift and go to state 29


state 21

    (16) loop_statement -> REPEAT . LPAREN expression RPAREN LBRACE statement_list RBRACE

    LPAREN          shift and go to state 30


state 22

    (18) return_statement -> RETURN . expression SEMICOLON
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 31
    function_call_expr             shift and go to state 36

state 23

    (40) ROBOT_COMMAND -> MOVEFORWARD .

    LPAREN          reduce using rule 40 (ROBOT_COMMAND -> MOVEFORWARD .)


state 24

    (41) ROBOT_COMMAND -> MOVEBACKWARD .

    LPAREN          reduce using rule 41 (ROBOT_COMMAND -> MOVEBACKWARD .)


state 25

    (42) ROBOT_COMMAND -> TURNRIGHT .

    LPAREN          reduce using rule 42 (ROBOT_COMMAND -> TURNRIGHT .)


state 26

    (43) ROBOT_COMMAND -> TURNLEFT .

    LPAREN          reduce using rule 43 (ROBOT_COMMAND -> TURNLEFT .)


state 27

    (17) function_call -> IDENTIFIER LPAREN . arguments RPAREN SEMICOLON
    (37) arguments -> . arguments COMMA expression
    (38) arguments -> . expression
    (39) arguments -> .
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    RPAREN          reduce using rule 39 (arguments -> .)
    COMMA           reduce using rule 39 (arguments -> .)
    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    arguments                      shift and go to state 37
    expression                     shift and go to state 38
    function_call_expr             shift and go to state 36

state 28

    (12) command_statement -> ROBOT_COMMAND LPAREN . arguments RPAREN SEMICOLON
    (37) arguments -> . arguments COMMA expression
    (38) arguments -> . expression
    (39) arguments -> .
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    RPAREN          reduce using rule 39 (arguments -> .)
    COMMA           reduce using rule 39 (arguments -> .)
    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    arguments                      shift and go to state 39
    expression                     shift and go to state 38
    function_call_expr             shift and go to state 36

state 29

    (13) if_statement -> IF LPAREN . expression RPAREN LBRACE statement_list RBRACE else_clause
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 40
    function_call_expr             shift and go to state 36

state 30

    (16) loop_statement -> REPEAT LPAREN . expression RPAREN LBRACE statement_list RBRACE
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 41
    function_call_expr             shift and go to state 36

state 31

    (18) return_statement -> RETURN expression . SEMICOLON
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       shift and go to state 42
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52
    AND             shift and go to state 53
    OR              shift and go to state 54


state 32

    (31) expression -> NOT . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 55
    function_call_expr             shift and go to state 36

state 33

    (32) expression -> LPAREN . expression RPAREN
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 56
    function_call_expr             shift and go to state 36

state 34

    (33) expression -> NUMBER .

    SEMICOLON       reduce using rule 33 (expression -> NUMBER .)
    PLUS            reduce using rule 33 (expression -> NUMBER .)
    MINUS           reduce using rule 33 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 33 (expression -> NUMBER .)
    DIVIDE          reduce using rule 33 (expression -> NUMBER .)
    EQ              reduce using rule 33 (expression -> NUMBER .)
    NEQ             reduce using rule 33 (expression -> NUMBER .)
    LT              reduce using rule 33 (expression -> NUMBER .)
    LE              reduce using rule 33 (expression -> NUMBER .)
    GT              reduce using rule 33 (expression -> NUMBER .)
    GE              reduce using rule 33 (expression -> NUMBER .)
    AND             reduce using rule 33 (expression -> NUMBER .)
    OR              reduce using rule 33 (expression -> NUMBER .)
    RPAREN          reduce using rule 33 (expression -> NUMBER .)
    COMMA           reduce using rule 33 (expression -> NUMBER .)


state 35

    (34) expression -> IDENTIFIER .
    (36) function_call_expr -> IDENTIFIER . LPAREN arguments RPAREN

    SEMICOLON       reduce using rule 34 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 34 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 34 (expression -> IDENTIFIER .)
    MULTIPLY        reduce using rule 34 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 34 (expression -> IDENTIFIER .)
    EQ              reduce using rule 34 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 34 (expression -> IDENTIFIER .)
    LT              reduce using rule 34 (expression -> IDENTIFIER .)
    LE              reduce using rule 34 (expression -> IDENTIFIER .)
    GT              reduce using rule 34 (expression -> IDENTIFIER .)
    GE              reduce using rule 34 (expression -> IDENTIFIER .)
    AND             reduce using rule 34 (expression -> IDENTIFIER .)
    OR              reduce using rule 34 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 34 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 34 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 57


state 36

    (35) expression -> function_call_expr .

    SEMICOLON       reduce using rule 35 (expression -> function_call_expr .)
    PLUS            reduce using rule 35 (expression -> function_call_expr .)
    MINUS           reduce using rule 35 (expression -> function_call_expr .)
    MULTIPLY        reduce using rule 35 (expression -> function_call_expr .)
    DIVIDE          reduce using rule 35 (expression -> function_call_expr .)
    EQ              reduce using rule 35 (expression -> function_call_expr .)
    NEQ             reduce using rule 35 (expression -> function_call_expr .)
    LT              reduce using rule 35 (expression -> function_call_expr .)
    LE              reduce using rule 35 (expression -> function_call_expr .)
    GT              reduce using rule 35 (expression -> function_call_expr .)
    GE              reduce using rule 35 (expression -> function_call_expr .)
    AND             reduce using rule 35 (expression -> function_call_expr .)
    OR              reduce using rule 35 (expression -> function_call_expr .)
    RPAREN          reduce using rule 35 (expression -> function_call_expr .)
    COMMA           reduce using rule 35 (expression -> function_call_expr .)


state 37

    (17) function_call -> IDENTIFIER LPAREN arguments . RPAREN SEMICOLON
    (37) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 58
    COMMA           shift and go to state 59


state 38

    (38) arguments -> expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    RPAREN          reduce using rule 38 (arguments -> expression .)
    COMMA           reduce using rule 38 (arguments -> expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52
    AND             shift and go to state 53
    OR              shift and go to state 54


state 39

    (12) command_statement -> ROBOT_COMMAND LPAREN arguments . RPAREN SEMICOLON
    (37) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 60
    COMMA           shift and go to state 59


state 40

    (13) if_statement -> IF LPAREN expression . RPAREN LBRACE statement_list RBRACE else_clause
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    RPAREN          shift and go to state 61
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52
    AND             shift and go to state 53
    OR              shift and go to state 54


state 41

    (16) loop_statement -> REPEAT LPAREN expression . RPAREN LBRACE statement_list RBRACE
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    RPAREN          shift and go to state 62
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52
    AND             shift and go to state 53
    OR              shift and go to state 54


state 42

    (18) return_statement -> RETURN expression SEMICOLON .

    RBRACE          reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    REPEAT          reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    MOVEFORWARD     reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    MOVEBACKWARD    reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    TURNRIGHT       reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)
    TURNLEFT        reduce using rule 18 (return_statement -> RETURN expression SEMICOLON .)


state 43

    (19) expression -> expression PLUS . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 63
    function_call_expr             shift and go to state 36

state 44

    (20) expression -> expression MINUS . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 64
    function_call_expr             shift and go to state 36

state 45

    (21) expression -> expression MULTIPLY . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 65
    function_call_expr             shift and go to state 36

state 46

    (22) expression -> expression DIVIDE . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 66
    function_call_expr             shift and go to state 36

state 47

    (23) expression -> expression EQ . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 67
    function_call_expr             shift and go to state 36

state 48

    (24) expression -> expression NEQ . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 68
    function_call_expr             shift and go to state 36

state 49

    (25) expression -> expression LT . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 69
    function_call_expr             shift and go to state 36

state 50

    (26) expression -> expression LE . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 70
    function_call_expr             shift and go to state 36

state 51

    (27) expression -> expression GT . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 71
    function_call_expr             shift and go to state 36

state 52

    (28) expression -> expression GE . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 72
    function_call_expr             shift and go to state 36

state 53

    (29) expression -> expression AND . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 73
    function_call_expr             shift and go to state 36

state 54

    (30) expression -> expression OR . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 74
    function_call_expr             shift and go to state 36

state 55

    (31) expression -> NOT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 31 (expression -> NOT expression .)
    PLUS            reduce using rule 31 (expression -> NOT expression .)
    MINUS           reduce using rule 31 (expression -> NOT expression .)
    MULTIPLY        reduce using rule 31 (expression -> NOT expression .)
    DIVIDE          reduce using rule 31 (expression -> NOT expression .)
    EQ              reduce using rule 31 (expression -> NOT expression .)
    NEQ             reduce using rule 31 (expression -> NOT expression .)
    LT              reduce using rule 31 (expression -> NOT expression .)
    LE              reduce using rule 31 (expression -> NOT expression .)
    GT              reduce using rule 31 (expression -> NOT expression .)
    GE              reduce using rule 31 (expression -> NOT expression .)
    AND             reduce using rule 31 (expression -> NOT expression .)
    OR              reduce using rule 31 (expression -> NOT expression .)
    RPAREN          reduce using rule 31 (expression -> NOT expression .)
    COMMA           reduce using rule 31 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MULTIPLY        [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 56

    (32) expression -> LPAREN expression . RPAREN
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    RPAREN          shift and go to state 75
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52
    AND             shift and go to state 53
    OR              shift and go to state 54


state 57

    (36) function_call_expr -> IDENTIFIER LPAREN . arguments RPAREN
    (37) arguments -> . arguments COMMA expression
    (38) arguments -> . expression
    (39) arguments -> .
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    RPAREN          reduce using rule 39 (arguments -> .)
    COMMA           reduce using rule 39 (arguments -> .)
    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    arguments                      shift and go to state 76
    expression                     shift and go to state 38
    function_call_expr             shift and go to state 36

state 58

    (17) function_call -> IDENTIFIER LPAREN arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 77


state 59

    (37) arguments -> arguments COMMA . expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression MULTIPLY expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression EQ expression
    (24) expression -> . expression NEQ expression
    (25) expression -> . expression LT expression
    (26) expression -> . expression LE expression
    (27) expression -> . expression GT expression
    (28) expression -> . expression GE expression
    (29) expression -> . expression AND expression
    (30) expression -> . expression OR expression
    (31) expression -> . NOT expression
    (32) expression -> . LPAREN expression RPAREN
    (33) expression -> . NUMBER
    (34) expression -> . IDENTIFIER
    (35) expression -> . function_call_expr
    (36) function_call_expr -> . IDENTIFIER LPAREN arguments RPAREN

    NOT             shift and go to state 32
    LPAREN          shift and go to state 33
    NUMBER          shift and go to state 34
    IDENTIFIER      shift and go to state 35

    expression                     shift and go to state 78
    function_call_expr             shift and go to state 36

state 60

    (12) command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 79


state 61

    (13) if_statement -> IF LPAREN expression RPAREN . LBRACE statement_list RBRACE else_clause

    LBRACE          shift and go to state 80


state 62

    (16) loop_statement -> REPEAT LPAREN expression RPAREN . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 81


state 63

    (19) expression -> expression PLUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 19 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 19 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 19 (expression -> expression PLUS expression .)
    EQ              reduce using rule 19 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 19 (expression -> expression PLUS expression .)
    LT              reduce using rule 19 (expression -> expression PLUS expression .)
    LE              reduce using rule 19 (expression -> expression PLUS expression .)
    GT              reduce using rule 19 (expression -> expression PLUS expression .)
    GE              reduce using rule 19 (expression -> expression PLUS expression .)
    AND             reduce using rule 19 (expression -> expression PLUS expression .)
    OR              reduce using rule 19 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 19 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 19 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46

  ! MULTIPLY        [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 64

    (20) expression -> expression MINUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 20 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 20 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 20 (expression -> expression MINUS expression .)
    EQ              reduce using rule 20 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 20 (expression -> expression MINUS expression .)
    LT              reduce using rule 20 (expression -> expression MINUS expression .)
    LE              reduce using rule 20 (expression -> expression MINUS expression .)
    GT              reduce using rule 20 (expression -> expression MINUS expression .)
    GE              reduce using rule 20 (expression -> expression MINUS expression .)
    AND             reduce using rule 20 (expression -> expression MINUS expression .)
    OR              reduce using rule 20 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 20 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 20 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46

  ! MULTIPLY        [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 65

    (21) expression -> expression MULTIPLY expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 21 (expression -> expression MULTIPLY expression .)
    PLUS            reduce using rule 21 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 21 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 21 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 21 (expression -> expression MULTIPLY expression .)
    EQ              reduce using rule 21 (expression -> expression MULTIPLY expression .)
    NEQ             reduce using rule 21 (expression -> expression MULTIPLY expression .)
    LT              reduce using rule 21 (expression -> expression MULTIPLY expression .)
    LE              reduce using rule 21 (expression -> expression MULTIPLY expression .)
    GT              reduce using rule 21 (expression -> expression MULTIPLY expression .)
    GE              reduce using rule 21 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 21 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 21 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 21 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 21 (expression -> expression MULTIPLY expression .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MULTIPLY        [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 66

    (22) expression -> expression DIVIDE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 22 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 22 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 22 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 22 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 22 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 22 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 22 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 22 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 22 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 22 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 22 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 22 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 22 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 22 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 22 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 43 ]
  ! MINUS           [ shift and go to state 44 ]
  ! MULTIPLY        [ shift and go to state 45 ]
  ! DIVIDE          [ shift and go to state 46 ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 67

    (23) expression -> expression EQ expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 23 (expression -> expression EQ expression .)
    EQ              reduce using rule 23 (expression -> expression EQ expression .)
    NEQ             reduce using rule 23 (expression -> expression EQ expression .)
    AND             reduce using rule 23 (expression -> expression EQ expression .)
    OR              reduce using rule 23 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 23 (expression -> expression EQ expression .)
    COMMA           reduce using rule 23 (expression -> expression EQ expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52

  ! PLUS            [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! MULTIPLY        [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! LT              [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! LE              [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! GT              [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! GE              [ reduce using rule 23 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 68

    (24) expression -> expression NEQ expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 24 (expression -> expression NEQ expression .)
    EQ              reduce using rule 24 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 24 (expression -> expression NEQ expression .)
    AND             reduce using rule 24 (expression -> expression NEQ expression .)
    OR              reduce using rule 24 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 24 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 24 (expression -> expression NEQ expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52

  ! PLUS            [ reduce using rule 24 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression NEQ expression .) ]
  ! MULTIPLY        [ reduce using rule 24 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression NEQ expression .) ]
  ! LT              [ reduce using rule 24 (expression -> expression NEQ expression .) ]
  ! LE              [ reduce using rule 24 (expression -> expression NEQ expression .) ]
  ! GT              [ reduce using rule 24 (expression -> expression NEQ expression .) ]
  ! GE              [ reduce using rule 24 (expression -> expression NEQ expression .) ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 69

    (25) expression -> expression LT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 25 (expression -> expression LT expression .)
    EQ              reduce using rule 25 (expression -> expression LT expression .)
    NEQ             reduce using rule 25 (expression -> expression LT expression .)
    LT              reduce using rule 25 (expression -> expression LT expression .)
    LE              reduce using rule 25 (expression -> expression LT expression .)
    GT              reduce using rule 25 (expression -> expression LT expression .)
    GE              reduce using rule 25 (expression -> expression LT expression .)
    AND             reduce using rule 25 (expression -> expression LT expression .)
    OR              reduce using rule 25 (expression -> expression LT expression .)
    RPAREN          reduce using rule 25 (expression -> expression LT expression .)
    COMMA           reduce using rule 25 (expression -> expression LT expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46

  ! PLUS            [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! MULTIPLY        [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression LT expression .) ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 70

    (26) expression -> expression LE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 26 (expression -> expression LE expression .)
    EQ              reduce using rule 26 (expression -> expression LE expression .)
    NEQ             reduce using rule 26 (expression -> expression LE expression .)
    LT              reduce using rule 26 (expression -> expression LE expression .)
    LE              reduce using rule 26 (expression -> expression LE expression .)
    GT              reduce using rule 26 (expression -> expression LE expression .)
    GE              reduce using rule 26 (expression -> expression LE expression .)
    AND             reduce using rule 26 (expression -> expression LE expression .)
    OR              reduce using rule 26 (expression -> expression LE expression .)
    RPAREN          reduce using rule 26 (expression -> expression LE expression .)
    COMMA           reduce using rule 26 (expression -> expression LE expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46

  ! PLUS            [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! MULTIPLY        [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression LE expression .) ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 71

    (27) expression -> expression GT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 27 (expression -> expression GT expression .)
    EQ              reduce using rule 27 (expression -> expression GT expression .)
    NEQ             reduce using rule 27 (expression -> expression GT expression .)
    LT              reduce using rule 27 (expression -> expression GT expression .)
    LE              reduce using rule 27 (expression -> expression GT expression .)
    GT              reduce using rule 27 (expression -> expression GT expression .)
    GE              reduce using rule 27 (expression -> expression GT expression .)
    AND             reduce using rule 27 (expression -> expression GT expression .)
    OR              reduce using rule 27 (expression -> expression GT expression .)
    RPAREN          reduce using rule 27 (expression -> expression GT expression .)
    COMMA           reduce using rule 27 (expression -> expression GT expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46

  ! PLUS            [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! MULTIPLY        [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression GT expression .) ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 72

    (28) expression -> expression GE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 28 (expression -> expression GE expression .)
    EQ              reduce using rule 28 (expression -> expression GE expression .)
    NEQ             reduce using rule 28 (expression -> expression GE expression .)
    LT              reduce using rule 28 (expression -> expression GE expression .)
    LE              reduce using rule 28 (expression -> expression GE expression .)
    GT              reduce using rule 28 (expression -> expression GE expression .)
    GE              reduce using rule 28 (expression -> expression GE expression .)
    AND             reduce using rule 28 (expression -> expression GE expression .)
    OR              reduce using rule 28 (expression -> expression GE expression .)
    RPAREN          reduce using rule 28 (expression -> expression GE expression .)
    COMMA           reduce using rule 28 (expression -> expression GE expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46

  ! PLUS            [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! MULTIPLY        [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression GE expression .) ]
  ! EQ              [ shift and go to state 47 ]
  ! NEQ             [ shift and go to state 48 ]
  ! LT              [ shift and go to state 49 ]
  ! LE              [ shift and go to state 50 ]
  ! GT              [ shift and go to state 51 ]
  ! GE              [ shift and go to state 52 ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 73

    (29) expression -> expression AND expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 29 (expression -> expression AND expression .)
    AND             reduce using rule 29 (expression -> expression AND expression .)
    OR              reduce using rule 29 (expression -> expression AND expression .)
    RPAREN          reduce using rule 29 (expression -> expression AND expression .)
    COMMA           reduce using rule 29 (expression -> expression AND expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52

  ! PLUS            [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! EQ              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LT              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! LE              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! GT              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! GE              [ reduce using rule 29 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 74

    (30) expression -> expression OR expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    SEMICOLON       reduce using rule 30 (expression -> expression OR expression .)
    OR              reduce using rule 30 (expression -> expression OR expression .)
    RPAREN          reduce using rule 30 (expression -> expression OR expression .)
    COMMA           reduce using rule 30 (expression -> expression OR expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52
    AND             shift and go to state 53

  ! PLUS            [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! EQ              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! LT              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! LE              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! GT              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! GE              [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 54 ]


state 75

    (32) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 32 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 32 (expression -> LPAREN expression RPAREN .)


state 76

    (36) function_call_expr -> IDENTIFIER LPAREN arguments . RPAREN
    (37) arguments -> arguments . COMMA expression

    RPAREN          shift and go to state 82
    COMMA           shift and go to state 59


state 77

    (17) function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .

    RBRACE          reduce using rule 17 (function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .)
    IF              reduce using rule 17 (function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .)
    REPEAT          reduce using rule 17 (function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 17 (function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .)
    RETURN          reduce using rule 17 (function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .)
    MOVEFORWARD     reduce using rule 17 (function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .)
    MOVEBACKWARD    reduce using rule 17 (function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .)
    TURNRIGHT       reduce using rule 17 (function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .)
    TURNLEFT        reduce using rule 17 (function_call -> IDENTIFIER LPAREN arguments RPAREN SEMICOLON .)


state 78

    (37) arguments -> arguments COMMA expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . MULTIPLY expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . EQ expression
    (24) expression -> expression . NEQ expression
    (25) expression -> expression . LT expression
    (26) expression -> expression . LE expression
    (27) expression -> expression . GT expression
    (28) expression -> expression . GE expression
    (29) expression -> expression . AND expression
    (30) expression -> expression . OR expression

    RPAREN          reduce using rule 37 (arguments -> arguments COMMA expression .)
    COMMA           reduce using rule 37 (arguments -> arguments COMMA expression .)
    PLUS            shift and go to state 43
    MINUS           shift and go to state 44
    MULTIPLY        shift and go to state 45
    DIVIDE          shift and go to state 46
    EQ              shift and go to state 47
    NEQ             shift and go to state 48
    LT              shift and go to state 49
    LE              shift and go to state 50
    GT              shift and go to state 51
    GE              shift and go to state 52
    AND             shift and go to state 53
    OR              shift and go to state 54


state 79

    (12) command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .

    RBRACE          reduce using rule 12 (command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .)
    IF              reduce using rule 12 (command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .)
    REPEAT          reduce using rule 12 (command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 12 (command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .)
    RETURN          reduce using rule 12 (command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .)
    MOVEFORWARD     reduce using rule 12 (command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .)
    MOVEBACKWARD    reduce using rule 12 (command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .)
    TURNRIGHT       reduce using rule 12 (command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .)
    TURNLEFT        reduce using rule 12 (command_statement -> ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON .)


state 80

    (13) if_statement -> IF LPAREN expression RPAREN LBRACE . statement_list RBRACE else_clause
    (5) statement_list -> . statement_list statement
    (6) statement_list -> .

    RBRACE          reduce using rule 6 (statement_list -> .)
    IF              reduce using rule 6 (statement_list -> .)
    REPEAT          reduce using rule 6 (statement_list -> .)
    IDENTIFIER      reduce using rule 6 (statement_list -> .)
    RETURN          reduce using rule 6 (statement_list -> .)
    MOVEFORWARD     reduce using rule 6 (statement_list -> .)
    MOVEBACKWARD    reduce using rule 6 (statement_list -> .)
    TURNRIGHT       reduce using rule 6 (statement_list -> .)
    TURNLEFT        reduce using rule 6 (statement_list -> .)

    statement_list                 shift and go to state 83

state 81

    (16) loop_statement -> REPEAT LPAREN expression RPAREN LBRACE . statement_list RBRACE
    (5) statement_list -> . statement_list statement
    (6) statement_list -> .

    RBRACE          reduce using rule 6 (statement_list -> .)
    IF              reduce using rule 6 (statement_list -> .)
    REPEAT          reduce using rule 6 (statement_list -> .)
    IDENTIFIER      reduce using rule 6 (statement_list -> .)
    RETURN          reduce using rule 6 (statement_list -> .)
    MOVEFORWARD     reduce using rule 6 (statement_list -> .)
    MOVEBACKWARD    reduce using rule 6 (statement_list -> .)
    TURNRIGHT       reduce using rule 6 (statement_list -> .)
    TURNLEFT        reduce using rule 6 (statement_list -> .)

    statement_list                 shift and go to state 84

state 82

    (36) function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .

    SEMICOLON       reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    PLUS            reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    MINUS           reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    MULTIPLY        reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    EQ              reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    NEQ             reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    LT              reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    LE              reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    GT              reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    GE              reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    AND             reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    OR              reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)
    COMMA           reduce using rule 36 (function_call_expr -> IDENTIFIER LPAREN arguments RPAREN .)


state 83

    (13) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list . RBRACE else_clause
    (5) statement_list -> statement_list . statement
    (7) statement -> . command_statement
    (8) statement -> . if_statement
    (9) statement -> . loop_statement
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) command_statement -> . ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON
    (13) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause
    (16) loop_statement -> . REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) function_call -> . IDENTIFIER LPAREN arguments RPAREN SEMICOLON
    (18) return_statement -> . RETURN expression SEMICOLON
    (40) ROBOT_COMMAND -> . MOVEFORWARD
    (41) ROBOT_COMMAND -> . MOVEBACKWARD
    (42) ROBOT_COMMAND -> . TURNRIGHT
    (43) ROBOT_COMMAND -> . TURNLEFT

    RBRACE          shift and go to state 85
    IF              shift and go to state 20
    REPEAT          shift and go to state 21
    IDENTIFIER      shift and go to state 11
    RETURN          shift and go to state 22
    MOVEFORWARD     shift and go to state 23
    MOVEBACKWARD    shift and go to state 24
    TURNRIGHT       shift and go to state 25
    TURNLEFT        shift and go to state 26

    statement                      shift and go to state 13
    command_statement              shift and go to state 14
    if_statement                   shift and go to state 15
    loop_statement                 shift and go to state 16
    function_call                  shift and go to state 17
    return_statement               shift and go to state 18
    ROBOT_COMMAND                  shift and go to state 19

state 84

    (16) loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list . RBRACE
    (5) statement_list -> statement_list . statement
    (7) statement -> . command_statement
    (8) statement -> . if_statement
    (9) statement -> . loop_statement
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) command_statement -> . ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON
    (13) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause
    (16) loop_statement -> . REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) function_call -> . IDENTIFIER LPAREN arguments RPAREN SEMICOLON
    (18) return_statement -> . RETURN expression SEMICOLON
    (40) ROBOT_COMMAND -> . MOVEFORWARD
    (41) ROBOT_COMMAND -> . MOVEBACKWARD
    (42) ROBOT_COMMAND -> . TURNRIGHT
    (43) ROBOT_COMMAND -> . TURNLEFT

    RBRACE          shift and go to state 86
    IF              shift and go to state 20
    REPEAT          shift and go to state 21
    IDENTIFIER      shift and go to state 11
    RETURN          shift and go to state 22
    MOVEFORWARD     shift and go to state 23
    MOVEBACKWARD    shift and go to state 24
    TURNRIGHT       shift and go to state 25
    TURNLEFT        shift and go to state 26

    statement                      shift and go to state 13
    command_statement              shift and go to state 14
    if_statement                   shift and go to state 15
    loop_statement                 shift and go to state 16
    function_call                  shift and go to state 17
    return_statement               shift and go to state 18
    ROBOT_COMMAND                  shift and go to state 19

state 85

    (13) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE . else_clause
    (14) else_clause -> . ELSE LBRACE statement_list RBRACE
    (15) else_clause -> .

    ELSE            shift and go to state 88
    RBRACE          reduce using rule 15 (else_clause -> .)
    IF              reduce using rule 15 (else_clause -> .)
    REPEAT          reduce using rule 15 (else_clause -> .)
    IDENTIFIER      reduce using rule 15 (else_clause -> .)
    RETURN          reduce using rule 15 (else_clause -> .)
    MOVEFORWARD     reduce using rule 15 (else_clause -> .)
    MOVEBACKWARD    reduce using rule 15 (else_clause -> .)
    TURNRIGHT       reduce using rule 15 (else_clause -> .)
    TURNLEFT        reduce using rule 15 (else_clause -> .)

    else_clause                    shift and go to state 87

state 86

    (16) loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 16 (loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IF              reduce using rule 16 (loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 16 (loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 16 (loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 16 (loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    MOVEFORWARD     reduce using rule 16 (loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    MOVEBACKWARD    reduce using rule 16 (loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    TURNRIGHT       reduce using rule 16 (loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .)
    TURNLEFT        reduce using rule 16 (loop_statement -> REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE .)


state 87

    (13) if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .

    RBRACE          reduce using rule 13 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .)
    IF              reduce using rule 13 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .)
    REPEAT          reduce using rule 13 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .)
    IDENTIFIER      reduce using rule 13 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .)
    RETURN          reduce using rule 13 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .)
    MOVEFORWARD     reduce using rule 13 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .)
    MOVEBACKWARD    reduce using rule 13 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .)
    TURNRIGHT       reduce using rule 13 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .)
    TURNLEFT        reduce using rule 13 (if_statement -> IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause .)


state 88

    (14) else_clause -> ELSE . LBRACE statement_list RBRACE

    LBRACE          shift and go to state 89


state 89

    (14) else_clause -> ELSE LBRACE . statement_list RBRACE
    (5) statement_list -> . statement_list statement
    (6) statement_list -> .

    RBRACE          reduce using rule 6 (statement_list -> .)
    IF              reduce using rule 6 (statement_list -> .)
    REPEAT          reduce using rule 6 (statement_list -> .)
    IDENTIFIER      reduce using rule 6 (statement_list -> .)
    RETURN          reduce using rule 6 (statement_list -> .)
    MOVEFORWARD     reduce using rule 6 (statement_list -> .)
    MOVEBACKWARD    reduce using rule 6 (statement_list -> .)
    TURNRIGHT       reduce using rule 6 (statement_list -> .)
    TURNLEFT        reduce using rule 6 (statement_list -> .)

    statement_list                 shift and go to state 90

state 90

    (14) else_clause -> ELSE LBRACE statement_list . RBRACE
    (5) statement_list -> statement_list . statement
    (7) statement -> . command_statement
    (8) statement -> . if_statement
    (9) statement -> . loop_statement
    (10) statement -> . function_call
    (11) statement -> . return_statement
    (12) command_statement -> . ROBOT_COMMAND LPAREN arguments RPAREN SEMICOLON
    (13) if_statement -> . IF LPAREN expression RPAREN LBRACE statement_list RBRACE else_clause
    (16) loop_statement -> . REPEAT LPAREN expression RPAREN LBRACE statement_list RBRACE
    (17) function_call -> . IDENTIFIER LPAREN arguments RPAREN SEMICOLON
    (18) return_statement -> . RETURN expression SEMICOLON
    (40) ROBOT_COMMAND -> . MOVEFORWARD
    (41) ROBOT_COMMAND -> . MOVEBACKWARD
    (42) ROBOT_COMMAND -> . TURNRIGHT
    (43) ROBOT_COMMAND -> . TURNLEFT

    RBRACE          shift and go to state 91
    IF              shift and go to state 20
    REPEAT          shift and go to state 21
    IDENTIFIER      shift and go to state 11
    RETURN          shift and go to state 22
    MOVEFORWARD     shift and go to state 23
    MOVEBACKWARD    shift and go to state 24
    TURNRIGHT       shift and go to state 25
    TURNLEFT        shift and go to state 26

    statement                      shift and go to state 13
    command_statement              shift and go to state 14
    if_statement                   shift and go to state 15
    loop_statement                 shift and go to state 16
    function_call                  shift and go to state 17
    return_statement               shift and go to state 18
    ROBOT_COMMAND                  shift and go to state 19

state 91

    (14) else_clause -> ELSE LBRACE statement_list RBRACE .

    RBRACE          reduce using rule 14 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    IF              reduce using rule 14 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    REPEAT          reduce using rule 14 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    IDENTIFIER      reduce using rule 14 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 14 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    MOVEFORWARD     reduce using rule 14 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    MOVEBACKWARD    reduce using rule 14 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    TURNRIGHT       reduce using rule 14 (else_clause -> ELSE LBRACE statement_list RBRACE .)
    TURNLEFT        reduce using rule 14 (else_clause -> ELSE LBRACE statement_list RBRACE .)

